---
layout: post
title:  "CVE-2021-3156 sudo vulnerability - patching RHEL 5 and 7 hosts"
date:   2021-02-15 13:00:01 -0800
categories: CVE-2021-3156 
---

Yesterday, I [posted](https://wlieberz.github.io/sudo/cve/security/linux/2021/02/15/sudo-vulnerability-CVE-2021-3156.html) a quick Ansible playbook for checking if hosts are patched or not for the sudo vulnerability [CVE-2021-3156](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3156).

In case anyone finds it helpful, I'm sharing my [playbook](https://github.com/wlieberz/ansible/blob/master/playbooks/patch-sudo-vuln-CVE-2021-3156.yml) for patching RHEL 5 and RHEL 7 hosts. 

In an ideal world there would be no more RHEL 5 hosts since even the Extended Life Cycle Support ended on November 30, 2020, but I don't think we live in an ideal world. 

The playbook assumes that RHEL 7 hosts can reach thier repos normally, but that the RHEL 5 hosts are on a restricted vlan without internet access, but that the Ansible control host can get out to the internet to fetch packages and push said packages to the RHEL 5 hosts. 

Running the playbook will download the RHEL-5 32-bit & 64-bit rpm packages and PGP keys from the sudo-project to the Ansible host. This is idempotent, so you only need to get the files once. Note: you should add a line like `*.rpm` to your `.gitignore` to avoid checking rpm packages into git.

Next we have two blocks, each with a `when:` conditional. The first block executes when the OS is RHEL 7, based on Ansible's fact-gathering and simply uses the yum module to ensure the sudo package is at the latest version. 

The second block similarly only runs when the host is RHEL 5. It copies the appropriate RPM based on the architecture to the remote host along with the PGP keys. Next, it imports the pgp keys, then does a local install of the sudo RPM, and finally removes all temp files which were copied over.

If you had the need to patch RHEL 6 hosts, the playbook could be easily extended with a similar pattern. 